apiVersion: apps/v1
kind: Deployment
metadata:
  name: skynet-docs
  namespace: skynet-docs
  labels:
    app: skynet-docs
    app.kubernetes.io/name: skynet-docs
    app.kubernetes.io/component: documentation
    app.kubernetes.io/part-of: skynet-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: skynet-docs
  template:
    metadata:
      labels:
        app: skynet-docs
        app.kubernetes.io/name: skynet-docs
        app.kubernetes.io/component: documentation
    spec:
      containers:
        - name: skynet-docs
          image: ghcr.io/cyberdine-skynet/skynet-docs:latest
          ports:
            - containerPort: 8080
              name: http
          resources:
            requests:
              memory: "32Mi"
              cpu: "10m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          securityContext:
            runAsNonRoot: true
            runAsUser: 101 # nginx user
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: var-cache
              mountPath: /var/cache/nginx
            - name: var-run
              mountPath: /var/run
      volumes:
        - name: tmp
          emptyDir: {}
        - name: var-cache
          emptyDir: {}
        - name: var-run
          emptyDir: {}
      securityContext:
        fsGroup: 101
